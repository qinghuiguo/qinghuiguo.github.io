I"'!<ul id="markdown-toc">
  <li><a href="#1实例无法正常启动" id="markdown-toc-1实例无法正常启动">1实例无法正常启动</a>    <ul>
      <li><a href="#11约束条件" id="markdown-toc-11约束条件">1.1<strong>约束条件</strong></a></li>
      <li><a href="#12恢复frm文件" id="markdown-toc-12恢复frm文件">1.2恢复*.frm文件</a></li>
      <li><a href="#13恢复表结构" id="markdown-toc-13恢复表结构">1.3恢复表结构</a></li>
      <li><a href="#14创建新表" id="markdown-toc-14创建新表">1.4创建新表</a></li>
      <li><a href="#15恢复ibd文件" id="markdown-toc-15恢复ibd文件">1.5恢复*.ibd文件</a></li>
    </ul>
  </li>
  <li><a href="#2表truancte或者delete" id="markdown-toc-2表truancte或者delete">2、表truancte或者delete</a>    <ul>
      <li><a href="#21安装恢复工具" id="markdown-toc-21安装恢复工具">2.1安装恢复工具</a></li>
      <li><a href="#22恢复数据" id="markdown-toc-22恢复数据">2.2恢复数据</a></li>
    </ul>
  </li>
</ul>

<p><strong>本文模拟的灾难环境</strong></p>
<ul>
  <li>1、实例无法正常启动，数据文件都还存在。</li>
  <li>2、表delete部分数据或者被truncate</li>
  <li>3、表被drop或者database 被drop
<strong>相关工具介绍</strong></li>
  <li>1、MySQL数据库实例。</li>
  <li>2、percona-data-recovery-tool-for-innodb
<strong>[源码下载地址]</strong>
https://launchpad.net/percona-data-recovery-tool-for-innodb/trunk/release-0.5/+download/percona-data-recovery-tool-for-innodb-0.5.tar.gz
<strong>[相关文档]</strong>
https://github.com/percona/innodb-data-recovery-tool-docs</li>
  <li>3 <a href="https://github.com/twindb/undrop-for-innodb">undrop-for-innodb</a>
<strong>开源地址</strong>：https://github.com/twindb/undrop-for-innodb
    <h2 id="1实例无法正常启动">1实例无法正常启动</h2>
    <p><em>环境</em>：MySQL 5.7.21
模拟故障：实例无法启动，数据文件还在。
恢复前的表结构和数据</p>
  </li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql&gt; show create table t1 \G;
*************************** 1. row ***************************
       Table: t1
Create Table: CREATE TABLE `t1` (
  `id` int(11) NOT NULL,
  `name` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1
1 row in set (0.00 sec)

ERROR: 
No query specified


mysql&gt; select * from t1;
+----+------+
| id | name |
+----+------+
|  1 | a    |
|  4 | c    |
|  7 | b    |
| 11 | e    |
| 20 | d    |
| 30 | b    |
+----+------+
6 rows in set (0.00 sec)
</code></pre></div></div>

<h3 id="11约束条件">1.1<strong>约束条件</strong></h3>
<p>开启innodb_file_per_table=on。</p>
<blockquote>
  <p>该参数表示表有独立的表空间，5.6.6默认开启</p>
  <h3 id="12恢复frm文件">1.2恢复*.frm文件</h3>
  <ul>
    <li>1、新的实例</li>
    <li>2、创建新的数据库
      <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">create</span> <span class="k">database</span> <span class="n">db1</span><span class="p">;</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="n">use</span> <span class="n">db1</span><span class="p">;</span>
</code></pre></div>      </div>
    </li>
    <li>3、创建同名表
      <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">create</span> <span class="k">table</span> <span class="n">t1</span><span class="p">(</span><span class="n">col1</span> <span class="nb">int</span><span class="p">);</span>
</code></pre></div>      </div>
    </li>
    <li>4、复制*.frm 覆盖当前实例的。t1.frm文件</li>
    <li>5、添加参数innodb_force_recovery=6到my.cnf文件
innodb_force_recovery默认值是0，6代表实例启动不校验idb文件</li>
  </ul>
</blockquote>

<ul>
  <li>6、重启实例</li>
  <li>7、从错误日志找出表的字段个数
InnoDB: Table db1/t1 contains 1 user defined columns in InnoDB, <strong>but 2 columns</strong> in MySQL
    <h3 id="13恢复表结构">1.3恢复表结构</h3>
    <p>重复1.2的操作
<strong>注意</strong>：需要注释掉#innodb_force_recovery=6
<strong>第二次建表语句</strong>
create table t1(col1 int,col2 int);
<strong>获得建表语句</strong></p>
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Create</span> <span class="k">Table</span><span class="p">:</span> <span class="k">CREATE</span> <span class="k">TABLE</span> <span class="nv">`t1`</span> <span class="p">(</span>
<span class="nv">`id`</span> <span class="nb">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
<span class="nv">`name`</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="k">DEFAULT</span> <span class="k">NULL</span><span class="p">,</span>
<span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">(</span><span class="nv">`id`</span><span class="p">)</span>
<span class="p">)</span> <span class="n">ENGINE</span><span class="o">=</span><span class="n">InnoDB</span> <span class="k">DEFAULT</span> <span class="n">CHARSET</span><span class="o">=</span><span class="n">latin1</span>
<span class="mi">1</span> <span class="k">row</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre></div>    </div>
    <h3 id="14创建新表">1.4创建新表</h3>
  </li>
  <li>1、注释参数)remove innodb_force_recovery=6</li>
  <li>2、重启实例</li>
  <li>3、删除旧表</li>
  <li>4、创建新表指定row_format=compact</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CREATE TABLE `t1` (
  `id` int(11) NOT NULL,
  `name` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  row_format=compact

</code></pre></div></div>
<h3 id="15恢复ibd文件">1.5恢复*.ibd文件</h3>

<ul>
  <li>1、alter table t1 discard tablespace;</li>
  <li>2、覆盖idb文件，重启实例</li>
  <li>3、alter table t1 import tablespace;
    <h2 id="2表truancte或者delete">2、表truancte或者delete</h2>
  </li>
</ul>

<blockquote>
  <p>该情况下mysql被删除的数据页会很快被覆盖，所以先要把表的数据文件拷贝出来，保护现场，此种情况无法保证完全恢复，如果删除的数据被覆盖，只能恢复部分数据。</p>

  <h3 id="21安装恢复工具">2.1安装恢复工具</h3>
</blockquote>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nb">tar</span> <span class="nt">-zxf</span> percona-data-recovery-tool-for-innodb-0.5.tar.gz 
<span class="nb">cd </span>percona-data-recovery-tool-for-innodb-0.5/mysql-source/
./configure 
<span class="nb">cd</span> ..
make
</code></pre></div></div>

<h3 id="22恢复数据">2.2恢复数据</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># cd /data/</span>
<span class="c"># mkdir -p /data/mysql/recover</span>
<span class="c"># cd /data/mysql/recover</span>
<span class="c"># cd db3/</span>
<span class="c"># cp t.* /data/mysql/recover</span>

<span class="nb">cd</span> /usr/local/
<span class="nb">cd </span>percona-data-recovery-tool/

<span class="c"># ./page_parser -5 -f /data/db3/t.ibd</span>
<span class="c"># cd pages-1517613235/</span>

<span class="c"># ./create_defs.pl --user root --password mysql --db db3 --table t1 &gt; include/table_defs.h</span>
<span class="c"># cat include/table_defs.h</span>

<span class="o">[</span>root@node1 percona-data-recovery-tool]# make

<span class="o">[</span>root@node1 percona-data-recovery-tool]# make

<span class="c"># ./constraints_parser -5 -f pages-1517613235/FIL_PAGE_INDEX/0-42/ &gt; /data/mysql/recover/t1.sql</span>

<span class="c"># cat /data/mysql/recover/t.sql | wc -l</span>
<span class="c"># head -10 /data/mysql/recover/t1.sql</span>
</code></pre></div></div>
:ET